numericalAttrStats {
	field.delim.in = ","
	field.delim.out = ","
	id.fieldOrdinals = [0]
	attr.ordinals = [3]
	seasonal.analysis = true
	part.bySeasonCycle = true
	seasonal.cycleType = ["weekDayOrWeekendOfWeek"]
	time.fieldOrdinal = 1
	time.inMili = false
	output.precision = 3
	debug.on = true
	save.output = true
}


statsBasedOutlierPredictor {
	field.delim.in = ","
	field.delim.out = ","
	predictor.strategy = "zscore"
	id.fieldOrdinals = [0]
	attr.ordinals = [3]
	score.threshold = 0.95
	score.thresholdNorm = 0.90
	hdfs.file = false
	zscore {
		attr.weights = [1.0]
		stats.file.path = "/Users/pranab/Projects/bin/beymani/other/olp/stats.txt"
	}
	seasonal.analysis = true
	part.bySeasonCycle = true
	seasonal.cycleType = ["weekDayOrWeekendOfWeek"]
	time.fieldOrdinal = 1
	time.inMili = false
	output.precision = 3
	output.outliers = false
	rem.outliers = false
	clean.dataDirPath = "file:///Users/pranab/Projects/bin/beymani/other/olp/clean"
	debug.on = true
	save.output = true
}

thresholdLearner {
	field.delim.in = ","
	field.delim.out = ","
	score.fldOrd = 4
	cls.fldOrd = 7
	split.points = [0.925, 0.930, 0.935, 0.940, 0.945, 0.950, 0.955, 0.960, 0.965, 0.970, 0.975]
	pos.clsLabel = "T"
	splitting.algo = "entropy"
	debug.on = true
	save.output = true
}	
